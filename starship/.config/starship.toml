# Use custom format:
format="$os $username$hostname$directory$git_branch$nodejs$python$character"

# OS module
[os]
disabled = false

[os.symbols]
Arch = "\ue712 "
#Gentoo = "\udb82\udce8 "
Linux = "\ue712 "
Macos = "\ue711 "
#OpenBSD = "\uf328 "
Pop = "\ue712 "
Raspbian = "\uef5c "
Ubuntu = "\uef72 "
#Unknown = "\uebc3 "
#Windows = "\uf17a "

# Prompt symbols 
[character]
success_symbol = "[>](#a6e3a1 bold)"
error_symbol = "[✖](bold red) "
#vicmd_symbol = "[>](#f9e2af)"

[username]
style_user = 'green bold'
style_root = 'black bold'
format = '[$user]($style)@'
disabled = false
show_always = true

[hostname]
ssh_only = false
format = '[$ssh_symbol](bold blue)[$hostname](bold red) '
#trim_at = '.companyname.com'
disabled = false

[directory]
#format = "(style)[(bg:#89b4fa fg:#49628a)$path](bg:#89b4fa fg:#49628a)(style)"
style = "bg:#1a1b26 fg:#89b4fa"
format = "[$path]($style)[$lock_symbol]($lock_style) "

[python]
# Display the version of python from inside a local venv.
#
# Note this will only work when the venv is inside the project and it will only
# work in the directory that contains the venv dir but maybe this is ok?
python_binary = ['./venv/bin/python', 'python', 'python3', 'python2']

[conda]
format = '[$symbol$environment](dimmed green) '


[git_branch]
format = " [$symbol$branch]($style) "
symbol = "🍣 "
style = "bold yellow"

[git_commit]
commit_hash_length = 8
style = "bold white"

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '

[git_status]
conflicted = "⚔️ "
ahead = "🏎️ 💨 ×${count}"
behind = "🐢 ×${count}"
diverged = "🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}"
untracked = "🛤️  ×${count}"
stashed = "📦 "
modified = "📝 ×${count}"
staged = "🗃️  ×${count}"
renamed = "📛 ×${count}"
deleted = "🗑️  ×${count}"
style = "bright-white"
format = "$all_status$ahead_behind"

[nodejs]
format = ' [🤖 $version](bold green) '
